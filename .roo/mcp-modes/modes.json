{
  "mcpOptimizedModes": {
    "mcp-orchestrator": {
      "name": "ü§ñ MCP Orchestrator",
      "slug": "mcp-orchestrator",
      "description": "Coordinate complex workflows involving multiple MCP servers and external services with intelligent service orchestration",
      "model": "claude-3-5-sonnet-20241022",
      "capabilities": [
        "service_discovery",
        "workflow_orchestration",
        "dependency_management",
        "authentication_handling",
        "distributed_processing",
        "service_health_monitoring",
        "load_balancing",
        "error_recovery"
      ],
      "requiredMcpServers": [
        "safla"
      ],
      "optionalMcpServers": [
        "context7",
        "perplexity"
      ],
      "filePatterns": [
        "\\.md$",
        "\\.json$",
        "\\.yaml$",
        "\\.yml$",
        "\\.ts$",
        "\\.js$",
        "\\.py$"
      ],
      "maxFileSize": 1000,
      "timeout": 300,
      "retryPolicy": {
        "maxRetries": 3,
        "backoffMultiplier": 2,
        "initialDelay": 1000
      }
    },
    "mcp-intelligent-coder": {
      "name": "üß† MCP Intelligent Coder",
      "slug": "mcp-intelligent-coder",
      "description": "Advanced coding with external code analysis tools, documentation services, and real-time validation through MCP integration",
      "model": "claude-3-5-sonnet-20241022",
      "capabilities": [
        "enhanced_code_generation",
        "real_time_validation",
        "external_documentation_access",
        "code_analysis_integration",
        "intelligent_refactoring",
        "dependency_resolution",
        "security_scanning",
        "performance_profiling"
      ],
      "requiredMcpServers": [
        "context7",
        "safla"
      ],
      "optionalMcpServers": [
        "perplexity"
      ],
      "filePatterns": [
        "\\.ts$",
        "\\.js$",
        "\\.py$",
        "\\.java$",
        "\\.cpp$",
        "\\.c$",
        "\\.rs$",
        "\\.go$",
        "\\.rb$",
        "\\.php$",
        "\\.cs$",
        "\\.swift$",
        "\\.kt$",
        "\\.scala$",
        "\\.md$",
        "\\.json$",
        "\\.yaml$",
        "\\.yml$"
      ],
      "maxFileSize": 500,
      "timeout": 180,
      "retryPolicy": {
        "maxRetries": 2,
        "backoffMultiplier": 1.5,
        "initialDelay": 500
      }
    },
    "mcp-researcher": {
      "name": "üîç MCP Researcher",
      "slug": "mcp-researcher",
      "description": "Comprehensive research utilizing external knowledge bases, academic databases, and research tools through MCP servers",
      "model": "claude-3-5-sonnet-20241022",
      "capabilities": [
        "knowledge_base_access",
        "academic_research",
        "real_time_data_retrieval",
        "cross_reference_validation",
        "citation_management",
        "trend_analysis",
        "fact_checking",
        "source_verification"
      ],
      "requiredMcpServers": [
        "perplexity",
        "context7"
      ],
      "optionalMcpServers": [
        "safla"
      ],
      "filePatterns": [
        "\\.md$",
        "\\.txt$",
        "\\.pdf$",
        "\\.docx$",
        "\\.json$",
        "\\.csv$",
        "\\.xlsx$"
      ],
      "maxFileSize": 2000,
      "timeout": 240,
      "retryPolicy": {
        "maxRetries": 3,
        "backoffMultiplier": 2,
        "initialDelay": 1000
      }
    },
    "mcp-optimizer": {
      "name": "‚ö° MCP Optimizer",
      "slug": "mcp-optimizer",
      "description": "Performance optimization through external profiling tools, benchmarking services, and optimization engines",
      "model": "claude-3-5-sonnet-20241022",
      "capabilities": [
        "performance_profiling",
        "benchmarking",
        "resource_optimization",
        "bottleneck_identification",
        "scalability_analysis",
        "memory_optimization",
        "cpu_optimization",
        "network_optimization"
      ],
      "requiredMcpServers": [
        "safla"
      ],
      "optionalMcpServers": [
        "context7",
        "perplexity"
      ],
      "filePatterns": [
        "\\.ts$",
        "\\.js$",
        "\\.py$",
        "\\.java$",
        "\\.cpp$",
        "\\.c$",
        "\\.rs$",
        "\\.go$",
        "\\.md$",
        "\\.json$",
        "\\.yaml$",
        "\\.yml$"
      ],
      "maxFileSize": 500,
      "timeout": 300,
      "retryPolicy": {
        "maxRetries": 3,
        "backoffMultiplier": 2,
        "initialDelay": 2000
      }
    },
    "mcp-management": {
      "name": "üè¢ MCP Management",
      "slug": "mcp-management",
      "description": "Enterprise management for coordinating business processes, project management tools, and organizational systems",
      "model": "claude-3-5-sonnet-20241022",
      "capabilities": [
        "project_coordination",
        "resource_management",
        "workflow_automation",
        "reporting_integration",
        "compliance_monitoring",
        "stakeholder_communication",
        "risk_assessment",
        "decision_support"
      ],
      "requiredMcpServers": [
        "safla"
      ],
      "optionalMcpServers": [
        "perplexity",
        "context7"
      ],
      "filePatterns": [
        "\\.md$",
        "\\.json$",
        "\\.yaml$",
        "\\.yml$",
        "\\.csv$",
        "\\.xlsx$",
        "\\.pdf$",
        "\\.docx$"
      ],
      "maxFileSize": 1500,
      "timeout": 180,
      "retryPolicy": {
        "maxRetries": 2,
        "backoffMultiplier": 1.5,
        "initialDelay": 1000
      }
    },
    "mcp-tutorial": {
      "name": "üìö MCP Tutorial",
      "slug": "mcp-tutorial",
      "description": "Interactive tutorials leveraging external learning platforms, documentation systems, and educational tools",
      "model": "claude-3-5-sonnet-20241022",
      "capabilities": [
        "interactive_learning",
        "documentation_integration",
        "progress_tracking",
        "adaptive_content",
        "skill_assessment",
        "resource_curation",
        "hands_on_exercises",
        "knowledge_validation"
      ],
      "requiredMcpServers": [
        "context7"
      ],
      "optionalMcpServers": [
        "perplexity",
        "safla"
      ],
      "filePatterns": [
        "\\.md$",
        "\\.txt$",
        "\\.json$",
        "\\.yaml$",
        "\\.yml$",
        "\\.html$",
        "\\.css$",
        "\\.js$",
        "\\.ts$",
        "\\.py$"
      ],
      "maxFileSize": 1000,
      "timeout": 120,
      "retryPolicy": {
        "maxRetries": 2,
        "backoffMultiplier": 1.5,
        "initialDelay": 500
      }
    }
  },
  "mcpIntegrationSettings": {
    "defaultTimeout": 60,
    "maxConcurrentConnections": 10,
    "healthCheckInterval": 30,
    "retryPolicy": {
      "defaultMaxRetries": 3,
      "defaultBackoffMultiplier": 2,
      "defaultInitialDelay": 1000
    },
    "security": {
      "requireAuthentication": true,
      "encryptCommunication": true,
      "auditLogging": true,
      "tokenRotationInterval": 3600
    },
    "performance": {
      "enableCaching": true,
      "cacheTimeout": 300,
      "enableBatching": true,
      "maxBatchSize": 10,
      "enablePrefetching": false
    },
    "monitoring": {
      "enableMetrics": true,
      "enableTracing": true,
      "enableAlerting": true,
      "metricsInterval": 60
    }
  },
  "serviceCategories": {
    "knowledge": {
      "description": "Knowledge bases, documentation, and information retrieval services",
      "servers": ["context7", "perplexity"],
      "capabilities": ["search", "retrieval", "analysis", "summarization"]
    },
    "development": {
      "description": "Development tools, code analysis, and software engineering services",
      "servers": ["safla"],
      "capabilities": ["code_generation", "testing", "deployment", "monitoring"]
    },
    "analytics": {
      "description": "Data analysis, performance monitoring, and optimization services",
      "servers": ["safla"],
      "capabilities": ["profiling", "benchmarking", "optimization", "reporting"]
    },
    "automation": {
      "description": "Workflow automation, process management, and orchestration services",
      "servers": ["safla"],
      "capabilities": ["orchestration", "scheduling", "monitoring", "alerting"]
    }
  },
  "workflowTemplates": {
    "research_and_implement": {
      "description": "Research a topic and implement a solution",
      "steps": [
        {"mode": "mcp-researcher", "action": "research_topic"},
        {"mode": "mcp-intelligent-coder", "action": "implement_solution"},
        {"mode": "mcp-optimizer", "action": "optimize_performance"}
      ]
    },
    "analyze_and_optimize": {
      "description": "Analyze existing code and optimize performance",
      "steps": [
        {"mode": "mcp-intelligent-coder", "action": "analyze_code"},
        {"mode": "mcp-optimizer", "action": "identify_bottlenecks"},
        {"mode": "mcp-optimizer", "action": "implement_optimizations"}
      ]
    },
    "learn_and_practice": {
      "description": "Learn a new technology and practice implementation",
      "steps": [
        {"mode": "mcp-tutorial", "action": "create_learning_path"},
        {"mode": "mcp-intelligent-coder", "action": "practice_implementation"},
        {"mode": "mcp-tutorial", "action": "validate_learning"}
      ]
    },
    "manage_and_deploy": {
      "description": "Manage project lifecycle and deploy solutions",
      "steps": [
        {"mode": "mcp-management", "action": "plan_project"},
        {"mode": "mcp-intelligent-coder", "action": "implement_features"},
        {"mode": "mcp-orchestrator", "action": "deploy_solution"}
      ]
    }
  }
}